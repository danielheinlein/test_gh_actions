name: All

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}

    steps:
      - uses: actions/checkout@v3

      - name: Configure CMake (coverage, sanitizer)
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_FLAGS="--coverage -fsanitize=address -fsanitize=leak -fsanitize=undefined"

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}} -T test -T coverage

      - name: Doxygen Action
        uses: mattnotmitt/doxygen-action@1.9.4

      - name: chmod html
        run: sudo chmod 777 html

      - name: Install lcov
        run: sudo apt-get install -y lcov

      - name: geninfo
        working-directory: ${{github.workspace}}/build
        run: geninfo CMakeFiles/*/src

      - name: genhtml
        run: genhtml build/CMakeFiles/*/src/*.gcda.info -o ./html/coverage

      - name: Install valgrind
        run: sudo apt-get install -y valgrind

      - name: rm build
        run: rm -r build/*

      - name: Configure CMake (no coverage, no sanitizer)
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: mkdir for valgrind
        run: mkdir html/cachegrind

      - name: valgrind
        run: valgrind --tool=cachegrind build/hello_world > html/cachegrind/cachegrind.txt 2>&1

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./html

      # - name: print all
      #   run: find
